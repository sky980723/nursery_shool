<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.start.springbootdemo.dao.ClassDao">
    <resultMap type="com.start.springbootdemo.entity.Class" id="ClassMap">
        <result column="id" property="id"/>
        <result column="grade_id" property="gradeId"/>
        <result column="class_name" property="className"/>
        <result column="school_id" property="schoolId"/>
        <result column="orders" property="orders"/>
        <result column="addtime" property="addtime"/>
        <result column="updatetime" property="updatetime"/>
    </resultMap>
    <select id="getClassId" resultType="java.lang.String">
        select id
        from class
        where school_id = #{schoolId}
          and class_name = #{className}
          and grade_id in (select id from grade where school_id = #{schoolId} and grade_name = #{gradeName})
        order by addtime desc
        limit 1
    </select>
    <!--按条件查询班级查询count-->
    <select id="countClassByNames" resultType="java.lang.Integer">
        select count(id)
        from class
        where school_id = #{schoolId}
          and class_name = #{className}
          and grade_id in (select id from grade where school_id = #{schoolId} and grade_name = #{gradeName})
    </select>
    <!--根据年级id查询班级集合  按顺序-->
    <select id="listClass" resultMap="ClassMap">
        select *
        from `class`
        where grade_id = #{gradeId}
        order by orders, addtime;
    </select>
    <insert id="saveClass" parameterType="com.start.springbootdemo.entity.Class">
        insert into `class`
            (id, grade_id, class_name, school_id, addtime)
        values (#{id}, #{gradeId}, #{className}, #{schoolId}, #{addtime})
    </insert>
    <update id="updateClass" parameterType="com.start.springbootdemo.entity.Class">
        update `class` set
        <if test="className != null and className !=''">
            class_name = #{className},
        </if>
        <if test="gradeId != null and gradeId !=''">
            grade_id = #{gradeId},
        </if>
        updatetime = #{updatetime}
        where id = #{id}
    </update>
    <delete id="deleteClass">
        delete
        from `class`
        where id = #{id}
    </delete>
    <!--根据年级name和id查询count-->
    <select id="countByGradeName" resultType="java.lang.Integer">
        select count(id) from grade where school_id = #{schoolId}
        <if test="gradeName != null and gradeName !=''">
            and grade_name = #{gradeName}
        </if>
        <if test="id != null and id !=''">
            and id != #{id}
        </if>
    </select>
    <select id="countClass" resultType="java.lang.Integer">
        select count(id) from `class` where school_id = #{schoolId}
        <if test="className != null and className !=''">
            and class_name = #{className}
        </if>
        <if test="gradeId != null and gradeId !=''">
            and grade_id = #{gradeId}
        </if>
        <if test="id != null and id !=''">
            and id != #{id}
        </if>
    </select>

    <resultMap id="GradeMap" type="com.start.springbootdemo.entity.Grade">
        <result column="id" property="id"/>
        <result column="grade_name" property="gradeName"/>
        <result column="orders" property="orders"/>
        <result column="school_id" property="schoolId"/>
        <result column="addtime" property="addtime"/>
        <result column="updatetime" property="updatetime"/>
    </resultMap>
    <!--根据id删除年级-->
    <delete id="deleteGrade">
        delete
        from grade
        where id = #{id}
    </delete>
    <!--根据幼儿园标识赋值年级的orders-->
    <select id="getOrders" resultType="java.lang.Integer">
        select IF(MAX(orders) is null,0,max(orders)) from grade where 1=1
        <if test="schoolId != null and schoolId !=''">
            and school_id = #{schoolId}
        </if>
    </select>
    <select id="listGrade" resultMap="GradeMap">
        select *
        from grade
        where school_id = #{schoolId}
        order by orders, addtime
    </select>
    <!--添加年级-->
    <insert id="saveGrade" parameterType="com.start.springbootdemo.entity.Grade">
        insert into grade(id, grade_name, orders, school_id, addtime)
        values (#{id}, #{gradeName}, #{orders}, #{schoolId}, #{addtime})
    </insert>

    <!--修改年级-->
    <update id="updateGrade" parameterType="com.start.springbootdemo.entity.Grade">
        update grade set
        <if test="gradeName != null and gradeName !=''">
            grade_name = #{gradeName},
        </if>
        <if test="orders != null">
            orders = #{orders},
        </if>
        updatetime = #{updatetime} where id = #{id}
    </update>


</mapper>